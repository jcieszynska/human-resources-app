[{"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\index.js":"1","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\app\\index.js":"2","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\index.js":"3","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\Links.jsx":"4","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\Logo.jsx":"5","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\NavBar.jsx":"6","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\index.js":"7","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\EmployeesList.jsx":"8","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\EmployeesUpdate.jsx":"9","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\EmployeesAdd.jsx":"10","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\api\\index.js":"11","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\TableContainer.js":"12","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\ActionEmployee.js":"13","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\SideBar.jsx":"14","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\modals\\EmployeeUpdateModal.js":"15"},{"size":148,"mtime":1610895345765,"results":"16","hashOfConfig":"17"},{"size":2476,"mtime":1611086955641,"results":"18","hashOfConfig":"17"},{"size":161,"mtime":1611072931258,"results":"19","hashOfConfig":"17"},{"size":1207,"mtime":1611086539398,"results":"20","hashOfConfig":"17"},{"size":404,"mtime":1611053857145,"results":"21","hashOfConfig":"17"},{"size":594,"mtime":1611086442348,"results":"22","hashOfConfig":"17"},{"size":197,"mtime":1610894733985,"results":"23","hashOfConfig":"17"},{"size":2511,"mtime":1611081052748,"results":"24","hashOfConfig":"17"},{"size":4618,"mtime":1611083646946,"results":"25","hashOfConfig":"17"},{"size":4168,"mtime":1611087050910,"results":"26","hashOfConfig":"17"},{"size":605,"mtime":1610916656202,"results":"27","hashOfConfig":"17"},{"size":1695,"mtime":1611086866627,"results":"28","hashOfConfig":"17"},{"size":1734,"mtime":1611083436823,"results":"29","hashOfConfig":"17"},{"size":753,"mtime":1611071947447,"results":"30","hashOfConfig":"17"},{"size":5164,"mtime":1611085517147,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"m4h34y",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\index.js",[],["68","69"],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\app\\index.js",["70"],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\index.js",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\Links.jsx",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\Logo.jsx",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\NavBar.jsx",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\index.js",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\EmployeesList.jsx",["71"],"import React, { Component }from 'react'\r\nimport api from '../api';\r\n\r\n\r\nimport TableContainer from '../pages/TableContainer'\r\nimport ActionEmployee from '../components/ActionEmployee'\r\n\r\nimport EmployeeUpdateModal from '../pages/modals/EmployeeUpdateModal'\r\n\r\nclass EmployeesList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employees: [],\r\n            columns: [],\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({ isLoading: true })\r\n\r\n        await api.getAllEmployees().then(employees => {\r\n        this.setState({\r\n            employees: employees.data.data,\r\n            isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { employees, isLoading } = this.state\r\n        console.log('TCL: Employee list -> render -> employees', employees);\r\n\r\n        const columns = [\r\n            {\r\n                Header: 'ID',\r\n                accessor: '_id',\r\n            }, \r\n            {\r\n                Header: 'Name',\r\n                accessor: 'firstName',\r\n            }, \r\n            {\r\n                Header: 'Last Name',\r\n                accessor: 'lastName',\r\n            }, {\r\n                Header: 'Department',\r\n                accessor: 'department',\r\n            }, {\r\n                Header: 'Salary',\r\n                accessor: 'salary',\r\n                Footer: info => {\r\n                    const total = React.useMemo(\r\n                      () =>\r\n                        info.rows.reduce((sum, row) => row.values.salary + sum, 0),\r\n                      [info.rows]\r\n                    )\r\n      \r\n                    return <>Total: {total}</>\r\n                  },\r\n            }, {\r\n                Header: 'Currency',\r\n                accessor: 'currency',\r\n                Footer: 'PLN',\r\n                \r\n            }, {\r\n                Header: 'Action',\r\n                Cell: function(props) {\r\n                    return (\r\n                        <span>   \r\n                            <ActionEmployee id={props.original}/>\r\n                        </span>\r\n                        \r\n                    )\r\n                }\r\n            }\r\n        ]\r\n\r\n        return  (\r\n                    <TableContainer\r\n                        data={employees}\r\n                        columns={columns}\r\n                        loading={isLoading}\r\n                    />\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeesList","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\EmployeesUpdate.jsx",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\EmployeesAdd.jsx",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\api\\index.js",[],"C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\TableContainer.js",["72"],"import React from \"react\"\r\nimport { useTable } from \"react-table\"\r\n\r\nimport Links from '../components/Links'\r\n\r\n\r\nimport styled from 'styled-components'\r\nconst Wrapper = styled.div`\r\n    padding: 0 40px 40px 40px; \r\n    fixed: left;\r\n`\r\n\r\nconst TableContainer = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  return (\r\n<Wrapper>\r\n  <div className=\"ui raised centered segment\">\r\n    <table className=\"ui selectable table\" {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map(row => {\r\n          prepareRow(row)\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return <td className=\"collapsing\" {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n      <tfoot>\r\n        {footerGroups.map(group => (\r\n          <tr {...group.getFooterGroupProps()}>\r\n            {group.headers.map(column => (\r\n              <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tfoot>\r\n    </table>\r\n    </div>\r\n  \r\n</Wrapper>\r\n  )\r\n}\r\n\r\nexport default TableContainer","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\ActionEmployee.js",["73"],"import React, { Component }from 'react'\r\nimport styled from 'styled-components'\r\nimport api from '../api';\r\nimport '../style/style.css'\r\n\r\nimport EmployeeUpdateModal from '../pages/modals/EmployeeUpdateModal.js'\r\n\r\n\r\nconst Update = styled.div.attrs({\r\n    className: 'ui button',\r\n}\r\n)`\r\n    color: #9382BD;\r\n    cursor: pointer;\r\n\r\n`\r\nconst Delete = styled.div.attrs({\r\n    className: 'ui button'\r\n})`\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nclass UpdateEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          modalOpen: false\r\n        }\r\n      }\r\n\r\n\r\n    updateUser = event => {\r\n        event.preventDefault();\r\n\r\n\r\n        window.location.href = `/employees/edit/${this.props.id}`\r\n    }\r\n\r\n    deleteUser = event => {\r\n        event.preventDefault();\r\n\r\n        if (\r\n            window.confirm(`Are you sure you want to delete the employee ${this.props.id} permanently?`, \r\n            )\r\n        ) {\r\n            api.deleteEmployeeById(this.props.id)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>        \r\n        <div className=\"ui buttons\">\r\n        <Update \r\n        onClick={this.updateUser} \r\n        onClick={\r\n            () => {\r\n              this.setState({ modalOpen: true })\r\n            }\r\n        }\r\n        >Edit</Update>\r\n        <EmployeeUpdateModal \r\n        modalOpen={this.state.modalOpen}\r\n        handleClose={\r\n            () => {\r\n                this.setState({ modalOpen: false })\r\n          }\r\n        }\r\n        />\r\n        <div className=\"or\"></div>\r\n        <Delete onClick={this.deleteUser}>Delete</Delete>\r\n        </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default UpdateEmployee","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\components\\SideBar.jsx",["74"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\n\r\nclass SideBar extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"ui left fixed vertical menu\">\r\n                <div className=\"left menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    Home\r\n                </Link>\r\n                <Link to=\"/employees/list\" className=\"item\">\r\n                    List of employees\r\n                </Link>\r\n                <Link to=\"/employees/add\" className=\"item\">\r\n                    Add an employee\r\n                </Link>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default SideBar","C:\\Users\\joann\\Documents\\GitHub\\human-resources-app\\client\\src\\pages\\modals\\EmployeeUpdateModal.js",["75"],"import React from 'react'\r\nimport { Modal, Header, Button, Icon } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport api from '../../api'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'ui form',\r\n})`\r\n`\r\n\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `ui button`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'ui transparent',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nclass EmployeeUpdateModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n \r\n        this.state = {\r\n           // id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            department: '',\r\n            salary: '',\r\n            currency: '',\r\n        }\r\n    }\r\n\r\n\r\n    handleChangeInputFirstName = async event => {\r\n        const firstName = event.target.value\r\n        this.setState({ firstName })\r\n    }\r\n    handleChangeInputLastName = async event => {\r\n        const lastName = event.target.value\r\n        this.setState({ lastName })\r\n    }\r\n    handleChangeInputDepartment = async event => {\r\n        const department = event.target.value\r\n        this.setState({ department })\r\n    }\r\n    handleChangeInputSalary = async event => {\r\n        const salary = event.target.value\r\n        this.setState({ salary })\r\n    }\r\n    handleChangeInputCurrency = async event => {\r\n        const currency = event.target.value\r\n        this.setState({ currency })\r\n    }\r\n    handleUpdateEmployee = async () => {\r\n        const { id, firstName, lastName, department, salary, currency } = this.state\r\n        const payload = { firstName, lastName, department, salary, currency }\r\n\r\n        await api.updateEmployee(id, payload).then(res => {\r\n            window.alert(`Employee updated successfully`)\r\n            this.setState({ \r\n                id: this.props.match.params.id,\r\n                firstName: '',\r\n                lastName: '',\r\n                department: '',\r\n                salary: '',\r\n                currency: ''\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { id } = this.state\r\n        const employee = api.getEmployeeById(id)\r\n\r\n        this.setState({ \r\n            firstName: employee.firstName,\r\n            lastName: employee.lastName,\r\n            department: employee.department,\r\n            salary: employee.salary,\r\n            currency: employee.currency\r\n        })\r\n    }\r\n\r\n  confirmClick = (event, data) => {\r\n\r\n    this.props.handleClose();\r\n  }\r\n  \r\n  render() {\r\n    const { firstName, lastName, department, salary, currency } = this.state\r\n    return (\r\n      <Modal \r\n        open={this.props.modalOpen}\r\n        size='small'\r\n        closeOnEscape={true}\r\n        centered={true}\r\n      >\r\n         <Wrapper className=\"ui raised centered segment\">\r\n                <Header icon=\"browser\" content=\"Update an employee\" />\r\n                <div class=\"ui divider\"></div>\r\n                <Modal.Content>\r\n\r\n                <Label>Name:  </Label>\r\n                <InputText \r\n                    placeholder=\"First Name\"\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={this.handleChangeInputFirstName}\r\n                />\r\n\r\n                <InputText \r\n                    placeholder=\"Last Name\"\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    onChange={this.handleChangeInputLastName}\r\n                />\r\n\r\n                <Label>Department: </Label>\r\n                <InputText \r\n                    placeholder=\"e.g. Marketing\"\r\n                    type=\"text\"\r\n                    value={department}\r\n                    onChange={this.handleChangeInputDepartment}\r\n                />\r\n\r\n                <Label>Salary: </Label>\r\n                <InputText \r\n                    placeholder=\"Min. 2100\"\r\n                    type=\"number\"\r\n                    value={salary}\r\n                    step=\"100\"\r\n                    min=\"2100\"\r\n                    onChange={this.handleChangeInputSalary}\r\n                />\r\n\r\n                <Label>Currency: </Label>\r\n                <InputText \r\n                    placeholder=\"PLN preffered\"\r\n                    type=\"text\"\r\n                    value={currency}\r\n                    onChange={this.handleChangeInputCurrency}\r\n                />\r\n\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <div className=\"ui buttons\">\r\n                        <Button onClick={this.handleIncludeAnEmployee}>Update employee</Button>\r\n                    <div className=\"or\"></div>\r\n                        <CancelButton href={'/employees/list'}>Cancel</CancelButton>\r\n                    </div>\r\n                </Modal.Actions>\r\n            </Wrapper>\r\n    </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nEmployeeUpdateModal.propTypes = {\r\n  modalOpen: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  valueIntoModal: PropTypes.string.isRequired\r\n}\r\n\r\nexport default EmployeeUpdateModal\r\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":16},{"ruleId":"80","severity":1,"message":"84","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":27},{"ruleId":"80","severity":1,"message":"85","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":59,"column":9,"nodeType":"88","endLine":63,"endColumn":10},{"ruleId":"80","severity":1,"message":"89","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"90","line":2,"column":33,"nodeType":"82","messageId":"83","endLine":2,"endColumn":37},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'EmployeeUpdateModal' is defined but never used.","'Links' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'styled' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]